name: pull-request-hook

on:
  pull_request:
    branches: [ master ]

jobs:
  show-number:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # https://github.com/actions/github-script
      - uses: actions/github-script@v4
        id: list-open-pulls
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.graphql(`
              query ($owner: String!, $name: String!) {
                repository(owner: $owner, name: $name) {
                  pullRequests(states: OPEN, orderBy: {field: UPDATED_AT, direction: DESC}, first: 50) {
                    nodes {
                      number
                    }
                  }
                }
              }
            `, {
              owner: context.repo.owner,
              name: context.repo.repo,
            })
            core.info(`response = ${JSON.stringify(response, undefined, 2)}`)
            return response.repository.pullRequests.nodes.map((node) => `pr-${node.number}`)

      - run: |
          cat <<EOF
          ${{ steps.list-open-pulls.outputs.result }}
          EOF

      - uses: actions/github-script@v4
        id: list-labeled-pulls
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.graphql(`
              query ($owner: String!, $name: String!, $labels: [String!]) {
                repository(owner: $owner, name: $name) {
                  pullRequests(states: OPEN, orderBy: {field: UPDATED_AT, direction: DESC}, labels: $labels, first: 10) {
                    nodes {
                      number
                    }
                  }
                }
              }
            `, {
              owner: context.repo.owner,
              name: context.repo.repo,
              labels: ['deploy'],
            })
            core.info(`response = ${JSON.stringify(response, undefined, 2)}`)
            return response.repository.pullRequests.nodes.map((node) => `pr-${node.number}`)

      - run: |
          cat <<EOF
          ${{ steps.list-labeled-pulls.outputs.result }}
          EOF
