name: deployment

on:
  pull_request:
    branches: master

jobs:
  create-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v4
        with:
          script: |
            const sleep = msec => new Promise(resolve => setTimeout(resolve, msec))

            const { data: deployment } = await github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.ref,
              environment: `pull-request-${context.issue.number}`,
              required_contexts: [],
              auto_merge: false,
            })
            core.info(JSON.stringify(deployment, undefined, 2))

            const createDeploymentStatus = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              mediaType: {
                previews: ['flash'],
              },
            }

            await sleep(1000)
            await github.repos.createDeploymentStatus({
              ...createDeploymentStatus,
              state: 'queued',
              description: 'Waiting for Argo CD polling',
              target_url: `https://argocd.example.com/pr-${context.issue.number}`,
            })

            await sleep(1000)
            await github.repos.createDeploymentStatus({
              ...createDeploymentStatus,
              state: 'pending',
              description: 'Argo CD is syncing',
              target_url: `https://argocd.example.com/pr-${context.issue.number}`,
            })

            await sleep(1000)
            await github.repos.createDeploymentStatus({
              ...createDeploymentStatus,
              state: 'in_progress',
              description: 'Waiting for ready',
              target_url: `https://argocd.example.com/pr-${context.issue.number}`,
            })

            await sleep(1000)
            await github.repos.createDeploymentStatus({
              ...createDeploymentStatus,
              state: 'success',
              description: 'Application is ready',
              target_url: `https://pr-${context.issue.number}.example.com`,
            })
