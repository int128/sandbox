name: bot

on:
  issue_comment:
    types:
      - created

jobs:
  approve:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/approve' &&
      github.actor == 'int128'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.issue.owner,
              repo: context.issue.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
            })

  merge:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/merge' &&
      github.actor == 'int128'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo } = context.issue
            const createComment = async (body) =>
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.issue.number,
                body: `${body}\n${github.context.serverUrl}/${github.context.repo.owner}/${github.context.repo.repo}/actions/runs/${github.context.runId}`
              })
            try {
              const { data: pull } = await github.rest.pulls.get({
                owner,
                repo,
                pull_number: context.issue.number,
              })
              console.info(`Updating base ${pull.base.ref} to head ${pull.head.ref}@${pull.head.sha}`)
              await github.rest.git.updateRef({
                owner,
                repo,
                ref: `heads/${pull.base.ref}`,
                sha: pull.head.sha,
              })
              await createComment(`Merged ${pull.head.sha} into ${pull.base.ref} on behalf of @${github.actor}`)
            } catch (error) {
              await createComment(`:x: Unable to merge: ${String(error)}`)
            }
