name: bot

on:
  issue_comment:
    types:
      - created
  pull_request_review_comment:
    types:
      - created

jobs:
  approve:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/approve' &&
      github.actor == 'int128'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            const { data: pull } = await github.rest.pulls.get({
              owner: context.issue.owner,
              repo: context.issue.repo,
              pull_number: context.issue.number,
            })
            await github.rest.checks.create({
              owner: context.issue.owner,
              repo: context.issue.repo,
              name: 'merge-bot',
              head_sha: pull.head.sha,
              conclusion: 'success',
              output: {
                title: `Ready to merge`,
                summary: `Ready to merge`,
              },
            })
            await github.rest.pulls.createReview({
              owner: context.issue.owner,
              repo: context.issue.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
            })

  merge:
    if: |
      github.event_name == 'pull_request_review_comment' &&
      github.event.comment.body == '/merge'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            await github.rest.checks.create({
              ...context.repo,
              name: 'fast-forward-merge-bot',
              head_sha: head.sha,
              status: 'completed',
              conclusion: 'success',
            })
            const { base, head } = context.payload.pull_request
            core.info(`Updating ${base.ref} to ${head.ref}@${head.sha}`)
            try {
              await github.rest.git.updateRef({
                ...context.repo,
                ref: `heads/${base.ref}`,
                sha: head.sha,
              })
            } catch (error) {
              await github.rest.checks.create({
                ...context.repo,
                name: 'fast-forward-merge-bot',
                head_sha: head.sha,
                status: 'completed',
                conclusion: 'failure',
                output: {
                  title: String(error),
                  summary: `## :x: Unable to merge\n@${context.actor}\n${String(error)}`,
                },
              })
              throw error
            }
            return await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `Updated ${base.ref} to ${head.sha} by fast-forward on behalf of @${context.actor}`
            })
